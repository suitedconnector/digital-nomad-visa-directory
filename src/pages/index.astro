---
import Layout from '../layouts/Layout.astro';
import { client } from '../src/lib/sanity';
import MapComponent from '../components/MapComponent.astro'; // We'll create this next

const query = `*[_type == "digitalNomadVisa"]{
  countryName,
  visaName,
  minMonthlyIncome,
  briefEligibility,
  slug,
  latitude,
  longitude
}`;
const visas = await client.fetch(query);
---

<Layout title="Digital Nomad Visa Directory">
  <main class="container mx-auto p-4">
    <h1 class="text-4xl font-bold text-center my-8">Digital Nomad Visa Directory</h1>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      <!-- Map Section -->
      <div class="md:col-span-1">
        <h2 class="text-2xl font-semibold mb-4">Visa Locations</h2>
        <MapComponent visas={visas} />
      </div>

      <!-- Visa List Section -->
      <div class="md:col-span-1">
        <h2 class="text-2xl font-semibold mb-4">Available Visas</h2>
        <ul class="space-y-4">
          {visas.map((visa) => (
            <li class="border p-4 rounded-lg shadow-sm">
              <a href={`/${visa.slug.current}`} class="block hover:text-blue-600">
                <h3 class="text-xl font-semibold">{visa.countryName} - {visa.visaName}</h3>
                <p class="text-gray-700">Min. Income: â‚¬{visa.minMonthlyIncome.toLocaleString()}</p>
                <p class="text-gray-600 text-sm mt-2">{visa.briefEligibility}</p>
              </a>
            </li>
          ))}
        </ul>
      </div>
    </div>

    <section class="mt-12 text-center">
      <h2 class="text-2xl font-semibold mb-4">Need Personalized Advice?</h2>
      <p class="text-lg text-gray-700">
        This information is for general guidance only and does not constitute legal advice. Visa requirements can change. Please consult with a qualified legal professional for personalized advice.
      </p>
      <!-- Placeholder for future lead generation form -->
      <p class="mt-4 text-gray-500">Contact details for legal professionals coming soon!</p>
    </section>
  </main>
</Layout>

<style is:global>
  /* Basic Tailwind-like styles for demonstration */
  .container {
    max-width: 1200px;
  }
  .mx-auto {
    margin-left: auto;
    margin-right: auto;
  }
  .p-4 {
    padding: 1rem;
  }
  .my-8 {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }
  .text-4xl { font-size: 2.25rem; }
  .font-bold { font-weight: 700; }
  .text-center { text-align: center; }
  .grid { display: grid; }
  .gap-8 { gap: 2rem; }
  .grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .md\:col-span-1 { grid-column: span 1 / span 1; }
  .text-2xl { font-size: 1.5rem; }
  .font-semibold { font-weight: 600; }
  .mb-4 { margin-bottom: 1rem; }
  .space-y-4 > :not([hidden]) ~ :not([hidden]) { margin-top: 1rem; }
  .border { border-width: 1px; }
  .rounded-lg { border-radius: 0.5rem; }
  .shadow-sm { box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); }
  .block { display: block; }
  .hover\:text-blue-600:hover { color: #2563eb; }
  .text-xl { font-size: 1.25rem; }
  .text-gray-700 { color: #374151; }
  .text-gray-600 { color: #4b5563; }
  .text-sm { font-size: 0.875rem; }
  .mt-2 { margin-top: 0.5rem; }
  .mt-12 { margin-top: 3rem; }
  .text-lg { font-size: 1.125rem; }
  .text-gray-500 { color: #6b7280; }
</style>

